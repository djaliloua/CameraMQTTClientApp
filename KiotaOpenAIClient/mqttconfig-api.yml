openapi: 3.0.1
info:
  title: MQTT Configuration API
  description: An ASP.NET Core Web API for managing Account items
  termsOfService: https://example.com/terms
  contact:
    name: Contact
    url: https://example.com/contact
  license:
    name: License
    url: https://example.com/license
  version: v1
paths:
  /MqttConfig:
    get:
      tags:
        - MqttConfig
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MQTTConfig'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MQTTConfig'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MQTTConfig'
    post:
      tags:
        - MqttConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MQTTConfig'
          text/json:
            schema:
              $ref: '#/components/schemas/MQTTConfig'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MQTTConfig'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            text/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
  '/MqttConfig/app/{guid}':
    get:
      tags:
        - MqttConfig
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            text/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
  '/MqttConfig/{id}':
    get:
      tags:
        - MqttConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            text/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
    delete:
      tags:
        - MqttConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
    put:
      tags:
        - MqttConfig
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MQTTConfig'
          text/json:
            schema:
              $ref: '#/components/schemas/MQTTConfig'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MQTTConfig'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
            text/json:
              schema:
                $ref: '#/components/schemas/MQTTConfig'
components:
  schemas:
    MQTTConfig:
      type: object
      properties:
        id:
          type: integer
          format: int32
        cameraId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        hostName:
          type: string
          nullable: true
        port:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        baseTopicName:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Please enter a valid token
      scheme: Bearer
      bearerFormat: JWT
security:
  - Bearer: [ ]